import{e,w as t}from"./index-CLBSgpMz.js";import{a as s}from"./data-vendor-CmJkK5PS.js";class r extends Error{constructor(e,t,s,a){super(e),this.code=t,this.statusCode=s,this.details=a,this.name="AppError",Object.setPrototypeOf(this,r.prototype)}toJSON(){return{name:this.name,message:this.message,code:this.code,statusCode:this.statusCode,details:this.details}}}class a extends r{constructor(e,t,s){super(e,"NETWORK_ERROR",t,s),this.name="NetworkError",Object.setPrototypeOf(this,a.prototype)}}class i extends r{constructor(e,t){super(e,"STORAGE_ERROR",void 0,t),this.name="StorageError",Object.setPrototypeOf(this,i.prototype)}}function n(e){return function(e){return e instanceof r}(e)?e:e instanceof Error?new r(e.message,"UNKNOWN_ERROR",void 0,{originalError:e.name}):new r("An unknown error occurred","UNKNOWN_ERROR",void 0,{error:String(e)})}const o=new class{dbName="aves-learning-db";dbVersion=1;db=null;staticData={annotations:[],species:[],exercises:[]};async initialize(){await this.loadStaticData(),await this.initIndexedDB(),this.migrateLocalStorage()}async loadStaticData(){try{const e="/aves/",t=await fetch(`${e}data/annotations.json`);this.staticData.annotations=await t.json();const s=await fetch(`${e}data/species.json`);this.staticData.species=await s.json();try{const t=await fetch(`${e}data/exercises.json`);this.staticData.exercises=await t.json()}catch{this.staticData.exercises=[]}}catch(t){e("Failed to load static data:",t instanceof Error?t:new Error(String(t))),this.loadEmbeddedData()}}loadEmbeddedData(){this.staticData.annotations=[{id:"1",imageId:"cardinal-1",boundingBox:{topLeft:{x:150,y:100},bottomRight:{x:250,y:150},width:100,height:50},type:"anatomical",spanishTerm:"pico",englishTerm:"beak",pronunciation:"PEE-koh",difficultyLevel:1,isVisible:!0,createdAt:new Date,updatedAt:new Date},{id:"2",imageId:"cardinal-1",boundingBox:{topLeft:{x:200,y:150},bottomRight:{x:280,y:200},width:80,height:50},type:"color",spanishTerm:"plumas rojas",englishTerm:"red feathers",pronunciation:"PLOO-mahs ROH-hahs",difficultyLevel:2,isVisible:!0,createdAt:new Date,updatedAt:new Date}],this.staticData.species=[{id:"1",scientificName:"Cardinalis cardinalis",englishName:"Northern Cardinal",spanishName:"Cardenal Rojo",orderName:"Passeriformes",familyName:"Cardinalidae",genus:"Cardinalis",habitats:["forest","urban"],sizeCategory:"medium",primaryColors:["red","black"],conservationStatus:"LC",primaryImageUrl:"https://images.unsplash.com/photo-1551031895-7f8e06d714f8?w=400",descriptionSpanish:"Ave distintiva de color rojo brillante con cresta prominente.",descriptionEnglish:"Distinctive bright red bird with prominent crest.",funFact:"Cardinals are one of the few bird species where both males and females sing.",annotationCount:2}]}async initIndexedDB(){return new Promise((t,s)=>{const r=indexedDB.open(this.dbName,this.dbVersion);r.onerror=()=>{e("Failed to open IndexedDB"),s(r.error)},r.onsuccess=()=>{this.db=r.result,t()},r.onupgradeneeded=e=>{const t=e.target.result;if(!t.objectStoreNames.contains("interactions")){const e=t.createObjectStore("interactions",{keyPath:"id",autoIncrement:!0});e.createIndex("annotationId","annotationId",{unique:!1}),e.createIndex("timestamp","timestamp",{unique:!1})}if(!t.objectStoreNames.contains("progress")){t.createObjectStore("progress",{keyPath:"sessionId"}).createIndex("lastUpdated","lastUpdated",{unique:!1})}if(!t.objectStoreNames.contains("exerciseResults")){const e=t.createObjectStore("exerciseResults",{keyPath:"id",autoIncrement:!0});e.createIndex("exerciseId","exerciseId",{unique:!1}),e.createIndex("completedAt","completedAt",{unique:!1})}}})}migrateLocalStorage(){const t=localStorage.getItem("aves-progress");if(t)try{const e=JSON.parse(t);this.saveProgress(e),localStorage.removeItem("aves-progress")}catch(s){e("Failed to migrate localStorage:",s instanceof Error?s:new Error(String(s)))}}async getAnnotations(e){return e?this.staticData.annotations.filter(t=>t.imageId===e):this.staticData.annotations}async getSpecies(e){let t=[...this.staticData.species];if(e){if(e.habitat&&(t=t.filter(t=>t.habitats.includes(e.habitat))),e.sizeCategory&&(t=t.filter(t=>t.sizeCategory===e.sizeCategory)),e.primaryColor&&(t=t.filter(t=>t.primaryColors.includes(e.primaryColor))),e.searchTerm){const s=e.searchTerm.toLowerCase();t=t.filter(e=>e.spanishName.toLowerCase().includes(s)||e.englishName.toLowerCase().includes(s)||e.scientificName.toLowerCase().includes(s))}e.orderName&&(t=t.filter(t=>t.orderName===e.orderName)),e.familyName&&(t=t.filter(t=>t.familyName===e.familyName))}return t}async getExercises(e){return e?this.staticData.exercises.filter(t=>t.type===e):this.staticData.exercises}async saveInteraction(e){if(!this.db)throw new i("Database not initialized");const t=this.db.transaction(["interactions"],"readwrite").objectStore("interactions"),s={...e,userSessionId:this.getCurrentSessionId(),timestamp:new Date};await new Promise((e,r)=>{const a=t.add(s);a.onsuccess=()=>e(),a.onerror=()=>r(new i("Failed to save interaction",{error:a.error}))})}async getInteractions(e){if(!this.db)throw new i("Database not initialized");const t=this.db.transaction(["interactions"],"readonly").objectStore("interactions");return new Promise((s,r)=>{const a=t.getAll();a.onsuccess=()=>{const t=a.result.filter(t=>t.userSessionId===e);s(t)},a.onerror=()=>r(new i("Failed to get interactions",{error:a.error}))})}async saveProgress(e){if(!this.db)return void localStorage.setItem("aves-progress-backup",JSON.stringify(e));const t=this.db.transaction(["progress"],"readwrite").objectStore("progress"),s={...e,lastUpdated:new Date};await new Promise((e,r)=>{const a=t.put(s);a.onsuccess=()=>e(),a.onerror=()=>r(new i("Failed to save progress",{error:a.error}))})}async getProgress(e){if(!this.db){const e=localStorage.getItem("aves-progress-backup");return e?JSON.parse(e):null}const t=this.db.transaction(["progress"],"readonly").objectStore("progress");return new Promise((s,r)=>{const a=t.get(e);a.onsuccess=()=>s(a.result||null),a.onerror=()=>r(new i("Failed to get progress",{error:a.error}))})}async saveExerciseResult(e){if(!this.db)throw new i("Database not initialized");const t=this.db.transaction(["exerciseResults"],"readwrite").objectStore("exerciseResults"),s={...e,completedAt:new Date};await new Promise((e,r)=>{const a=t.add(s);a.onsuccess=()=>e(),a.onerror=()=>r(new i("Failed to save exercise result",{error:a.error}))})}async getExerciseResults(e){if(!this.db)throw new i("Database not initialized");const t=this.db.transaction(["exerciseResults"],"readonly").objectStore("exerciseResults");return new Promise((s,r)=>{const a=t.getAll();a.onsuccess=()=>{const t=a.result.filter(t=>t.sessionId===e);s(t)},a.onerror=()=>r(new i("Failed to get exercise results",{error:a.error}))})}async exportData(){const e=this.getCurrentSessionId(),t={interactions:await this.getInteractions(e),progress:await this.getProgress(e),exerciseResults:await this.getExerciseResults(e),exportedAt:(new Date).toISOString()};return JSON.stringify(t,null,2)}async importData(t){try{const e=JSON.parse(t);if(e.interactions&&Array.isArray(e.interactions))for(const t of e.interactions)await this.saveInteraction(t);if(e.progress&&await this.saveProgress(e.progress),e.exerciseResults&&Array.isArray(e.exerciseResults))for(const t of e.exerciseResults)await this.saveExerciseResult(t)}catch(s){throw e("Failed to import data:",s instanceof Error?s:new Error(String(s))),new i("Invalid import data format",{error:s})}}getCurrentSessionId(){let e=sessionStorage.getItem("aves-session-id");return e||(e=`session-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,sessionStorage.setItem("aves-session-id",e)),e}async clearAllData(){if(this.db){const e=this.db.transaction(["interactions","progress","exerciseResults"],"readwrite");await Promise.all([this.clearObjectStore(e,"interactions"),this.clearObjectStore(e,"progress"),this.clearObjectStore(e,"exerciseResults")])}localStorage.clear(),sessionStorage.clear()}clearObjectStore(e,t){return new Promise((s,r)=>{const a=e.objectStore(t).clear();a.onsuccess=()=>s(),a.onerror=()=>r(a.error)})}};o.initialize().catch(e);const c={VITE_API_URL:"https://aves-backend-production.up.railway.app"},d=window.location.hostname.includes("github.io");const l=new class{axiosInstance=null;useClientStorage;constructor(){const e=window.location.pathname.includes("/admin");if(this.useClientStorage=d&&!e,!this.useClientStorage||e){const e=c,t=e?.VITE_API_URL;this.axiosInstance=s.create({baseURL:t,timeout:1e4,headers:{"Content-Type":"application/json"}}),this.setupInterceptors()}const t=c,r=t?.VITE_API_URL;!e&&d||(s.defaults.baseURL=r)}setupInterceptors(){this.axiosInstance&&(this.axiosInstance.interceptors.request.use(e=>{const t=sessionStorage.getItem("aves-session-id");return t&&(e.headers["X-Session-Id"]=t),e},e=>Promise.reject(e)),this.axiosInstance.interceptors.response.use(e=>e,e=>(503===e.response?.status&&(t("Backend unavailable, switching to client storage"),this.useClientStorage=!0),Promise.reject(e))))}async getAnnotations(t){if(this.useClientStorage)return o.getAnnotations(t);try{return(await this.axiosInstance.get("/api/annotations",{params:{imageId:t}})).data.data}catch(s){return e("API error, falling back to client storage:",s instanceof Error?s:new Error(String(s))),this.handleApiError(s),o.getAnnotations(t)}}async createAnnotation(t){if(this.useClientStorage)throw new a("Cannot create annotations in static mode",403);try{return(await this.axiosInstance.post("/api/annotations",t)).data.data}catch(e){throw this.handleApiError(e)}}async getSpecies(t){if(this.useClientStorage)return o.getSpecies(t);try{return(await this.axiosInstance.get("/api/species",{params:t})).data.data}catch(s){return e("API error, falling back to client storage:",s instanceof Error?s:new Error(String(s))),this.handleApiError(s),o.getSpecies(t)}}async getSpeciesById(e){return(await this.getSpecies()).find(t=>t.id===e)||null}async getExercises(t){if(this.useClientStorage)return o.getExercises(t);try{return(await this.axiosInstance.get("/api/exercises",{params:{type:t}})).data.data}catch(s){return e("API error, falling back to client storage:",s instanceof Error?s:new Error(String(s))),this.handleApiError(s),o.getExercises(t)}}async submitExerciseAnswer(t,s){if(this.useClientStorage){const e={exerciseId:t,answer:s,correct:this.validateAnswer(t,s),timestamp:new Date,sessionId:this.getSessionId()};return await o.saveExerciseResult({...e,sessionId:e.sessionId||this.getSessionId()}),e}try{const e={exerciseId:t,answer:s,sessionId:this.getSessionId()};return(await this.axiosInstance.post("/api/exercises/submit",e)).data.data}catch(e){throw this.handleApiError(e)}}validateAnswer(e,t){return Math.random()>.3}getSessionId(){let e=sessionStorage.getItem("aves-session-id");return e||(e=`session-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,sessionStorage.setItem("aves-session-id",e)),e}async saveInteraction(e){if(this.useClientStorage)return o.saveInteraction(e);await this.axiosInstance.post("/api/vocabulary/interact",e)}async getInteractions(t){if(this.useClientStorage)return o.getInteractions(t);try{return(await this.axiosInstance.get("/api/vocabulary/interactions",{params:{sessionId:t}})).data.data}catch(s){return e("API error, falling back to client storage:",s instanceof Error?s:new Error(String(s))),this.handleApiError(s),o.getInteractions(t)}}async saveProgress(t){if(this.useClientStorage)return o.saveProgress(t);try{await this.axiosInstance.post("/api/progress",t)}catch(e){throw this.handleApiError(e)}}async getProgress(t){if(this.useClientStorage)return o.getProgress(t);try{return(await this.axiosInstance.get("/api/progress",{params:{sessionId:t}})).data.data}catch(s){return e("API error, falling back to client storage:",s instanceof Error?s:new Error(String(s))),this.handleApiError(s),o.getProgress(t)}}async exportUserData(){return o.exportData()}async importUserData(e){return o.importData(e)}async clearAllData(){return o.clearAllData()}isUsingClientStorage(){return this.useClientStorage}getStorageMode(){return this.useClientStorage?"client":"backend"}handleApiError(e){if(s.isAxiosError(e)){const t=e,s=t.response?.status,r=t.message||"Network request failed",i=t.response?.data;return new a(r,s,i)}const t=n(e);return new a(t.message,void 0,{originalError:t.code})}},g={annotations:{list:e=>l.getAnnotations(e),create:e=>l.createAnnotation(e)},species:{list:e=>l.getSpecies(e),get:e=>l.getSpeciesById(e)},exercises:{list:e=>l.getExercises(e),submit:(e,t)=>l.submitExerciseAnswer(e,t)},vocabulary:{saveInteraction:e=>l.saveInteraction(e),getInteractions:e=>l.getInteractions(e)},progress:{save:e=>l.saveProgress(e),get:e=>l.getProgress(e)},utils:{export:()=>l.exportUserData(),import:e=>l.importUserData(e),clear:()=>l.clearAllData(),getMode:()=>l.getStorageMode()}};export{g as a};
