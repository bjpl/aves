var f=Object.defineProperty;var b=(r,e,t)=>e in r?f(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var g=(r,e,t)=>b(r,typeof e!="symbol"?e+"":e,t);import{e as u,w as y}from"./index-BuDiMPS5.js";import{a as w}from"./index-ngrFHoWO.js";class h extends Error{constructor(e,t,s,n){super(e),this.code=t,this.statusCode=s,this.details=n,this.name="AppError",Object.setPrototypeOf(this,h.prototype)}toJSON(){return{name:this.name,message:this.message,code:this.code,statusCode:this.statusCode,details:this.details}}}class m extends h{constructor(e,t,s){super(e,"NETWORK_ERROR",t,s),this.name="NetworkError",Object.setPrototypeOf(this,m.prototype)}}class d extends h{constructor(e,t){super(e,"STORAGE_ERROR",void 0,t),this.name="StorageError",Object.setPrototypeOf(this,d.prototype)}}function I(r){return r instanceof h}function x(r){return I(r)?r:r instanceof Error?new h(r.message,"UNKNOWN_ERROR",void 0,{originalError:r.name}):new h("An unknown error occurred","UNKNOWN_ERROR",void 0,{error:String(r)})}class E{constructor(){g(this,"dbName","aves-learning-db");g(this,"dbVersion",1);g(this,"db",null);g(this,"staticData",{annotations:[],species:[],exercises:[]})}async initialize(){await this.loadStaticData(),await this.initIndexedDB(),this.migrateLocalStorage()}async loadStaticData(){try{const e="/aves/",t=await fetch(`${e}data/annotations.json`);this.staticData.annotations=await t.json();const s=await fetch(`${e}data/species.json`);this.staticData.species=await s.json();try{const n=await fetch(`${e}data/exercises.json`);this.staticData.exercises=await n.json()}catch{this.staticData.exercises=[]}}catch(e){u("Failed to load static data:",e instanceof Error?e:new Error(String(e))),this.loadEmbeddedData()}}loadEmbeddedData(){this.staticData.annotations=[{id:"1",imageId:"cardinal-1",boundingBox:{topLeft:{x:150,y:100},bottomRight:{x:250,y:150},width:100,height:50},type:"anatomical",spanishTerm:"pico",englishTerm:"beak",pronunciation:"PEE-koh",difficultyLevel:1,isVisible:!0,createdAt:new Date,updatedAt:new Date},{id:"2",imageId:"cardinal-1",boundingBox:{topLeft:{x:200,y:150},bottomRight:{x:280,y:200},width:80,height:50},type:"color",spanishTerm:"plumas rojas",englishTerm:"red feathers",pronunciation:"PLOO-mahs ROH-hahs",difficultyLevel:2,isVisible:!0,createdAt:new Date,updatedAt:new Date}],this.staticData.species=[{id:"1",scientificName:"Cardinalis cardinalis",englishName:"Northern Cardinal",spanishName:"Cardenal Rojo",orderName:"Passeriformes",familyName:"Cardinalidae",genus:"Cardinalis",habitats:["forest","urban"],sizeCategory:"medium",primaryColors:["red","black"],conservationStatus:"LC",primaryImageUrl:"https://images.unsplash.com/photo-1551031895-7f8e06d714f8?w=400",descriptionSpanish:"Ave distintiva de color rojo brillante con cresta prominente.",descriptionEnglish:"Distinctive bright red bird with prominent crest.",funFact:"Cardinals are one of the few bird species where both males and females sing.",annotationCount:2}]}async initIndexedDB(){return new Promise((e,t)=>{const s=indexedDB.open(this.dbName,this.dbVersion);s.onerror=()=>{u("Failed to open IndexedDB"),t(s.error)},s.onsuccess=()=>{this.db=s.result,e()},s.onupgradeneeded=n=>{const i=n.target.result;if(!i.objectStoreNames.contains("interactions")){const a=i.createObjectStore("interactions",{keyPath:"id",autoIncrement:!0});a.createIndex("annotationId","annotationId",{unique:!1}),a.createIndex("timestamp","timestamp",{unique:!1})}if(i.objectStoreNames.contains("progress")||i.createObjectStore("progress",{keyPath:"sessionId"}).createIndex("lastUpdated","lastUpdated",{unique:!1}),!i.objectStoreNames.contains("exerciseResults")){const a=i.createObjectStore("exerciseResults",{keyPath:"id",autoIncrement:!0});a.createIndex("exerciseId","exerciseId",{unique:!1}),a.createIndex("completedAt","completedAt",{unique:!1})}}})}migrateLocalStorage(){const e=localStorage.getItem("aves-progress");if(e)try{const t=JSON.parse(e);this.saveProgress(t),localStorage.removeItem("aves-progress")}catch(t){u("Failed to migrate localStorage:",t instanceof Error?t:new Error(String(t)))}}async getAnnotations(e){return e?this.staticData.annotations.filter(t=>t.imageId===e):this.staticData.annotations}async getSpecies(e){let t=[...this.staticData.species];if(e){if(e.habitat&&(t=t.filter(s=>s.habitats.includes(e.habitat))),e.sizeCategory&&(t=t.filter(s=>s.sizeCategory===e.sizeCategory)),e.primaryColor&&(t=t.filter(s=>s.primaryColors.includes(e.primaryColor))),e.searchTerm){const s=e.searchTerm.toLowerCase();t=t.filter(n=>n.spanishName.toLowerCase().includes(s)||n.englishName.toLowerCase().includes(s)||n.scientificName.toLowerCase().includes(s))}e.orderName&&(t=t.filter(s=>s.orderName===e.orderName)),e.familyName&&(t=t.filter(s=>s.familyName===e.familyName))}return t}async getExercises(e){return e?this.staticData.exercises.filter(t=>t.type===e):this.staticData.exercises}async saveInteraction(e){if(!this.db)throw new d("Database not initialized");const s=this.db.transaction(["interactions"],"readwrite").objectStore("interactions"),n={...e,userSessionId:this.getCurrentSessionId(),timestamp:new Date};await new Promise((i,a)=>{const o=s.add(n);o.onsuccess=()=>i(),o.onerror=()=>a(new d("Failed to save interaction",{error:o.error}))})}async getInteractions(e){if(!this.db)throw new d("Database not initialized");const s=this.db.transaction(["interactions"],"readonly").objectStore("interactions");return new Promise((n,i)=>{const a=s.getAll();a.onsuccess=()=>{const o=a.result.filter(p=>p.userSessionId===e);n(o)},a.onerror=()=>i(new d("Failed to get interactions",{error:a.error}))})}async saveProgress(e){if(!this.db){localStorage.setItem("aves-progress-backup",JSON.stringify(e));return}const s=this.db.transaction(["progress"],"readwrite").objectStore("progress"),n={...e,lastUpdated:new Date};await new Promise((i,a)=>{const o=s.put(n);o.onsuccess=()=>i(),o.onerror=()=>a(new d("Failed to save progress",{error:o.error}))})}async getProgress(e){if(!this.db){const n=localStorage.getItem("aves-progress-backup");return n?JSON.parse(n):null}const s=this.db.transaction(["progress"],"readonly").objectStore("progress");return new Promise((n,i)=>{const a=s.get(e);a.onsuccess=()=>n(a.result||null),a.onerror=()=>i(new d("Failed to get progress",{error:a.error}))})}async saveExerciseResult(e){if(!this.db)throw new d("Database not initialized");const s=this.db.transaction(["exerciseResults"],"readwrite").objectStore("exerciseResults"),n={...e,completedAt:new Date};await new Promise((i,a)=>{const o=s.add(n);o.onsuccess=()=>i(),o.onerror=()=>a(new d("Failed to save exercise result",{error:o.error}))})}async getExerciseResults(e){if(!this.db)throw new d("Database not initialized");const s=this.db.transaction(["exerciseResults"],"readonly").objectStore("exerciseResults");return new Promise((n,i)=>{const a=s.getAll();a.onsuccess=()=>{const o=a.result.filter(p=>p.sessionId===e);n(o)},a.onerror=()=>i(new d("Failed to get exercise results",{error:a.error}))})}async exportData(){const e=this.getCurrentSessionId(),t=await this.getInteractions(e),s=await this.getProgress(e),n=await this.getExerciseResults(e),i={interactions:t,progress:s,exerciseResults:n,exportedAt:new Date().toISOString()};return JSON.stringify(i,null,2)}async importData(e){try{const t=JSON.parse(e);if(t.interactions&&Array.isArray(t.interactions))for(const s of t.interactions)await this.saveInteraction(s);if(t.progress&&await this.saveProgress(t.progress),t.exerciseResults&&Array.isArray(t.exerciseResults))for(const s of t.exerciseResults)await this.saveExerciseResult(s)}catch(t){throw u("Failed to import data:",t instanceof Error?t:new Error(String(t))),new d("Invalid import data format",{error:t})}}getCurrentSessionId(){let e=sessionStorage.getItem("aves-session-id");return e||(e=`session-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,sessionStorage.setItem("aves-session-id",e)),e}async clearAllData(){if(this.db){const e=this.db.transaction(["interactions","progress","exerciseResults"],"readwrite");await Promise.all([this.clearObjectStore(e,"interactions"),this.clearObjectStore(e,"progress"),this.clearObjectStore(e,"exerciseResults")])}localStorage.clear(),sessionStorage.clear()}clearObjectStore(e,t){return new Promise((s,n)=>{const a=e.objectStore(t).clear();a.onsuccess=()=>s(),a.onerror=()=>n(a.error)})}}const c=new E;c.initialize().catch(u);const A={VITE_API_URL:"http://localhost:3001"},S=window.location.hostname.includes("github.io"),v=window.location.hostname==="localhost"&&!S;class D{constructor(){g(this,"axiosInstance",null);g(this,"useClientStorage");if(this.useClientStorage=S||!v,!this.useClientStorage){const e=A,t=e==null?void 0:e.VITE_API_URL;this.axiosInstance=w.create({baseURL:t,timeout:1e4,headers:{"Content-Type":"application/json"}}),this.setupInterceptors()}}setupInterceptors(){this.axiosInstance&&(this.axiosInstance.interceptors.request.use(e=>{const t=sessionStorage.getItem("aves-session-id");return t&&(e.headers["X-Session-Id"]=t),e},e=>Promise.reject(e)),this.axiosInstance.interceptors.response.use(e=>e,e=>{var t;return((t=e.response)==null?void 0:t.status)===503&&(y("Backend unavailable, switching to client storage"),this.useClientStorage=!0),Promise.reject(e)}))}async getAnnotations(e){if(this.useClientStorage)return c.getAnnotations(e);try{return(await this.axiosInstance.get("/api/annotations",{params:{imageId:e}})).data.data}catch(t){return u("API error, falling back to client storage:",t instanceof Error?t:new Error(String(t))),this.handleApiError(t),c.getAnnotations(e)}}async createAnnotation(e){if(this.useClientStorage)throw new m("Cannot create annotations in static mode",403);try{return(await this.axiosInstance.post("/api/annotations",e)).data.data}catch(t){throw this.handleApiError(t)}}async getSpecies(e){if(this.useClientStorage)return c.getSpecies(e);try{return(await this.axiosInstance.get("/api/species",{params:e})).data.data}catch(t){return u("API error, falling back to client storage:",t instanceof Error?t:new Error(String(t))),this.handleApiError(t),c.getSpecies(e)}}async getSpeciesById(e){return(await this.getSpecies()).find(s=>s.id===e)||null}async getExercises(e){if(this.useClientStorage)return c.getExercises(e);try{return(await this.axiosInstance.get("/api/exercises",{params:{type:e}})).data.data}catch(t){return u("API error, falling back to client storage:",t instanceof Error?t:new Error(String(t))),this.handleApiError(t),c.getExercises(e)}}async submitExerciseAnswer(e,t){if(this.useClientStorage){const s={exerciseId:e,answer:t,correct:this.validateAnswer(e,t),timestamp:new Date,sessionId:this.getSessionId()};return await c.saveExerciseResult({...s,sessionId:s.sessionId||this.getSessionId()}),s}try{const s={exerciseId:e,answer:t,sessionId:this.getSessionId()};return(await this.axiosInstance.post("/api/exercises/submit",s)).data.data}catch(s){throw this.handleApiError(s)}}validateAnswer(e,t){return Math.random()>.3}getSessionId(){let e=sessionStorage.getItem("aves-session-id");return e||(e=`session-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,sessionStorage.setItem("aves-session-id",e)),e}async saveInteraction(e){if(this.useClientStorage)return c.saveInteraction(e);await this.axiosInstance.post("/api/vocabulary/interact",e)}async getInteractions(e){if(this.useClientStorage)return c.getInteractions(e);try{return(await this.axiosInstance.get("/api/vocabulary/interactions",{params:{sessionId:e}})).data.data}catch(t){return u("API error, falling back to client storage:",t instanceof Error?t:new Error(String(t))),this.handleApiError(t),c.getInteractions(e)}}async saveProgress(e){if(this.useClientStorage)return c.saveProgress(e);try{await this.axiosInstance.post("/api/progress",e)}catch(t){throw this.handleApiError(t)}}async getProgress(e){if(this.useClientStorage)return c.getProgress(e);try{return(await this.axiosInstance.get("/api/progress",{params:{sessionId:e}})).data.data}catch(t){return u("API error, falling back to client storage:",t instanceof Error?t:new Error(String(t))),this.handleApiError(t),c.getProgress(e)}}async exportUserData(){return c.exportData()}async importUserData(e){return c.importData(e)}async clearAllData(){return c.clearAllData()}isUsingClientStorage(){return this.useClientStorage}getStorageMode(){return this.useClientStorage?"client":"backend"}handleApiError(e){var s,n;if(w.isAxiosError(e)){const i=e,a=(s=i.response)==null?void 0:s.status,o=i.message||"Network request failed",p=(n=i.response)==null?void 0:n.data;return new m(o,a,p)}const t=x(e);return new m(t.message,void 0,{originalError:t.code})}}const l=new D,N={annotations:{list:r=>l.getAnnotations(r),create:r=>l.createAnnotation(r)},species:{list:r=>l.getSpecies(r),get:r=>l.getSpeciesById(r)},exercises:{list:r=>l.getExercises(r),submit:(r,e)=>l.submitExerciseAnswer(r,e)},vocabulary:{saveInteraction:r=>l.saveInteraction(r),getInteractions:r=>l.getInteractions(r)},progress:{save:r=>l.saveProgress(r),get:r=>l.getProgress(r)},utils:{export:()=>l.exportUserData(),import:r=>l.importUserData(r),clear:()=>l.clearAllData(),getMode:()=>l.getStorageMode()}};export{N as a};
